.covalent-icon{--mdc-icon-font: "covalent-icons"}.skeleton-text *{font-family:skeleton,sans-serif !important}.skeleton-text{--mdc-typography-body2-font-family: "skeleton";--mdc-typography-body2-letter-spacing: -0.03em;--mdc-theme-text-primary-on-background: #cccccc;--skeleton-color: #cccccc}:root{--mdc-theme-primary: #007373;--mdc-theme-secondary: #007373;--mdc-theme-error: #b11d00;--mdc-theme-negative: #b11d00;--mdc-theme-positive: #0a7e07;--mdc-theme-caution: #ff8f00;--mdc-theme-emphasis: #546e7a;--mdc-theme-accent: #007373;--mdc-theme-background: #f5f5f5;--mdc-ripple-color: rgba(0, 0, 0, 0.87);--mdc-theme-surface: white;--mdc-theme-surface-canvas: #eee;--mdc-theme-surface-primary: #85dddc;--mdc-theme-surface-primary-highlight: rgba(133, 221, 220, 0.1);--mdc-theme-surface-primary-highlight-hover: rgba(133, 221, 220, 0.2);--mdc-theme-surface-secondary: #85dddc;--mdc-theme-surface-secondary-highlight: rgba(133, 221, 220, 0.1);--mdc-theme-surface-secondary-highlight-hover: rgba(133, 221, 220, 0.2);--mdc-theme-surface-caution: #ffb74d;--mdc-theme-surface-caution-highlight: rgba(255, 183, 77, 0.1);--mdc-theme-surface-caution-highlight-hover: rgba(255, 183, 77, 0.2);--mdc-theme-surface-negative: #e57373;--mdc-theme-surface-negative-highlight: rgba(229, 115, 115, 0.1);--mdc-theme-surface-negative-highlight-hover: rgba(229, 115, 115, 0.2);--mdc-theme-surface-positive: #a5d6a7;--mdc-theme-surface-positive-highlight: rgba(165, 214, 167, 0.1);--mdc-theme-surface-positive-highlight-hover: rgba(165, 214, 167, 0.2);--mdc-theme-surface-neutral: #bdbdbd;--mdc-theme-surface-neutral-highlight: rgba(189, 189, 189, 0.04);--mdc-theme-surface-neutral-highlight-hover: rgba(189, 189, 189, 0.08);--mdc-theme-surface-emphasis: #afb6b9;--mdc-theme-surface-emphasis-highlight: rgba(175, 182, 185, 0.1);--mdc-theme-surface-emphasis-highlight-hover: rgba(175, 182, 185, 0.2);--mdc-theme-on-primary: white;--mdc-theme-on-secondary: white;--mdc-theme-on-surface: rgba(0, 0, 0, 0.87);--mdc-theme-border: rgba(0, 0, 0, 0.12);--mdc-theme-surface-accent: #85dddc;--mdc-theme-surface-accent-highlight: rgba(133, 221, 220, 0.1);--mdc-theme-surface-accent-highlight-hover: rgba(133, 221, 220, 0.2);--mdc-typography-font-family: Arial, sans-serif;--mdc-typography-headline1-font-family: Poppins, sans-serif;--mdc-typography-headline1-font-size: 96px;--mdc-typography-headline1-font-weight: 500;--mdc-typography-headline1-line-height: 112px;--mdc-typography-headline2-font-family: Poppins, sans-serif;--mdc-typography-headline2-font-size: 60px;--mdc-typography-headline2-font-weight: 600;--mdc-typography-headline2-line-height: 84px;--mdc-typography-headline3-font-family: Poppins, sans-serif;--mdc-typography-headline3-font-size: 48px;--mdc-typography-headline3-font-weight: 600;--mdc-typography-headline3-line-height: 64px;--mdc-typography-headline4-font-family: Poppins, sans-serif;--mdc-typography-headline4-font-size: 34px;--mdc-typography-headline4-font-weight: 700;--mdc-typography-headline4-line-height: 48px;--mdc-typography-headline5-font-family: Poppins, sans-serif;--mdc-typography-headline5-font-size: 24px;--mdc-typography-headline5-font-weight: 700;--mdc-typography-headline5-line-height: 36px;--mdc-typography-headline6-font-family: Poppins, sans-serif;--mdc-typography-headline6-font-size: 20px;--mdc-typography-headline6-font-weight: 700;--mdc-typography-headline6-line-height: 28px;--mdc-typography-subtitle1-font-family: Poppins, sans-serif;--mdc-typography-subtitle1-font-size: 14px;--mdc-typography-subtitle1-font-weight: 600;--mdc-typography-subtitle1-line-height: 20px;--mdc-typography-subtitle2-font-family: Poppins, sans-serif;--mdc-typography-subtitle2-font-size: 16px;--mdc-typography-subtitle2-font-weight: 600;--mdc-typography-subtitle2-line-height: 24px;--mdc-typography-body1-font-family: var(--mdc-typography-font-family);--mdc-typography-body1-font-size: 16px;--mdc-typography-body1-font-weight: 400;--mdc-typography-body1-line-height: 24px;--mdc-typography-body2-font-family: var(--mdc-typography-font-family);--mdc-typography-body2-font-size: 14px;--mdc-typography-body2-font-weight: 400;--mdc-typography-body2-line-height: 20px;--mdc-typography-button-font-family: Poppins, sans-serif;--mdc-typography-button-font-size: 14px;--mdc-typography-button-font-weight: 600;--mdc-typography-button-line-height: 16px;--mdc-typography-caption-font-family: var(--mdc-typography-font-family);--mdc-typography-caption-font-size: 12px;--mdc-typography-caption-font-weight: 400;--mdc-typography-caption-line-height: 16px;--mdc-theme-text-primary-on-background: rgba(0, 0, 0, 0.87);--mdc-theme-text-secondary-on-background: rgba(0, 0, 0, 0.54);--mdc-theme-text-hint-on-background: rgba(0, 0, 0, 0.38);--mdc-theme-text-disabled-on-background: rgba(0, 0, 0, 0.38);--mdc-theme-text-icon-on-background: rgba(0, 0, 0, 0.54);--mdc-theme-text-primary-on-light: rgba(0, 0, 0, 0.87);--mdc-theme-text-secondary-on-light: rgba(0, 0, 0, 0.54);--mdc-theme-text-hint-on-light: rgba(0, 0, 0, 0.38);--mdc-theme-text-disabled-on-light: rgba(0, 0, 0, 0.38);--mdc-theme-text-icon-on-light: rgba(0, 0, 0, 0.54);--mdc-theme-text-primary-on-dark: 255, 255, 255;--mdc-theme-text-secondary-on-dark: rgba(255, 255, 255, 0.7);--mdc-theme-text-hint-on-dark: rgba(255, 255, 255, 0.5);--mdc-theme-text-disabled-on-dark: rgba(255, 255, 255, 0.5);--mdc-theme-text-icon-on-dark: white;--covalent-theme-text-logo-on-background: #354145;--mdc-shape-small: 8px;--mdc-shape-medium: 8px;--mdc-theme-error: #b11d00;--mdc-checkbox-checked-color: #007373;--mdc-checkbox-disabled-color: rgba(0, 0, 0, 0.38);--mdc-checkbox-ink-color: white;--mdc-checkbox-unchecked-color: rgba(0, 0, 0, 0.54);border-width:0;border-style:solid;--mdc-dialog-heading-ink-color: rgba(0, 0, 0, 0.87);--mdc-dialog-content-ink-color: rgba(0, 0, 0, 0.87);--mdc-dialog-scroll-divider-color: rgba(0, 0, 0, 0.12);--mdc-linear-progress-buffer-color: rgba(0, 0, 0, 0.12);--mdc-list-single-line-height: 48px;--mdc-list-two-line-height: 72px;--mdc-radio-unchecked-color: rgba(0, 0, 0, 0.54);--mdc-select-idle-line-color: rgba(0, 0, 0, 0.12);--mdc-select-hover-line-color: rgba(0, 0, 0, 0.54);--mdc-select-fill-color: #eee;--mdc-select-ink-color: rgba(0, 0, 0, 0.87);--mdc-select-label-ink-color: rgba(0, 0, 0, 0.54);--mdc-select-outlined-idle-border-color: rgba(0, 0, 0, 0.12);--mdc-select-outlined-hover-border-color: rgba(0, 0, 0, 0.54);--mdc-select-dropdown-icon-color: rgba(0, 0, 0, 0.54);--mdc-snackbar-action-color: #007373;--mdc-tab-text-label-color-default: var( --mdc-theme-text-primary-on-background );--mdc-tab-color-default: var(--mdc-theme-text-icon-on-background);--mdc-text-field-label-ink-color: rgba(0, 0, 0, 0.54);--mdc-text-field-ink-color: rgba(0, 0, 0, 0.54);--mdc-text-field-fill-color: #eee;--mdc-text-field-idle-line-color: rgba(0, 0, 0, 0.12);--mdc-text-field-hover-line-color: rgba(0, 0, 0, 0.54);--mdc-text-field-outlined-idle-border-color: rgba(0, 0, 0, 0.12);--mdc-text-field-outlined-hover-border-color: rgba(0, 0, 0, 0.54);color:var(--mdc-theme-text-primary-on-background)}:root td-button{--mdc-button-outline-color: rgba(0, 0, 0, 0.54);--mdc-theme-primary: rgba(0, 0, 0, 0.87)}:root td-button[outlined].accent.primary,:root td-button[raised].accent.primary,:root td-button[text].accent.primary{--mdc-theme-primary: #007373;--mdc-button-outline-color: var(--mdc-theme-primary)}:root td-button[outlined].destructive.primary,:root td-button[raised].destructive.primary,:root td-button[text].destructive.primary,:root td-button[outlined].negative.primary,:root td-button[raised].negative.primary,:root td-button[text].negative.primary{--mdc-theme-primary: var(--mdc-theme-error);--mdc-button-outline-color: var(--mdc-theme-error)}:root .mdc-button:not(:disabled){--mdc-button-outline-color: rgba(0, 0, 0, 0.54);--mdc-theme-primary: rgba(0, 0, 0, 0.87)}:root .mdc-button:not(:disabled):not(:disabled){border-color:rgba(0, 0, 0, 0.54)}:root .mdc-button:not(:disabled).accent{--mdc-theme-primary: #007373;--mdc-button-outline-color: var(--mdc-theme-primary);border-color:var(--mdc-button-outline-color)}:root .mdc-button:not(:disabled).destructive,:root .mdc-button:not(:disabled).negative{--mdc-theme-primary: #b11d00;--mdc-button-outline-color: var(--mdc-theme-primary);border-color:var(--mdc-button-outline-color)}:root .mdc-card.mdc-card--outlined{background-color:#f5f5f5}:root .mdc-data-table__sort-icon-button{color:rgba(0, 0, 0, 0.38)}:root .mdc-data-table__sort-icon-button .mdc-icon-button__ripple::before,:root .mdc-data-table__sort-icon-button .mdc-icon-button__ripple::after{background-color:rgba(0, 0, 0, 0.38);background-color:var(--mdc-ripple-color, rgba(0, 0, 0, 0.38))}:root .mdc-data-table__sort-icon-button:hover .mdc-icon-button__ripple::before,:root .mdc-data-table__sort-icon-button.mdc-ripple-surface--hover .mdc-icon-button__ripple::before{opacity:0.04;opacity:var(--mdc-ripple-hover-opacity, 0.04)}:root .mdc-data-table__sort-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__ripple::before,:root .mdc-data-table__sort-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__ripple::before{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-focus-opacity, 0.12)}:root .mdc-data-table__sort-icon-button:not(.mdc-ripple-upgraded) .mdc-icon-button__ripple::after{transition:opacity 150ms linear}:root .mdc-data-table__sort-icon-button:not(.mdc-ripple-upgraded):active .mdc-icon-button__ripple::after{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-press-opacity, 0.12)}:root .mdc-data-table__sort-icon-button.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}:root .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button{color:rgba(0, 0, 0, 0.54)}:root .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button .mdc-icon-button__ripple::before,:root .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button .mdc-icon-button__ripple::after{background-color:rgba(0, 0, 0, 0.54);background-color:var(--mdc-ripple-color, rgba(0, 0, 0, 0.54))}:root .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button:hover .mdc-icon-button__ripple::before,:root .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button.mdc-ripple-surface--hover .mdc-icon-button__ripple::before{opacity:0.04;opacity:var(--mdc-ripple-hover-opacity, 0.04)}:root .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__ripple::before,:root .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__ripple::before{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-focus-opacity, 0.12)}:root .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button:not(.mdc-ripple-upgraded) .mdc-icon-button__ripple::after{transition:opacity 150ms linear}:root .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button:not(.mdc-ripple-upgraded):active .mdc-icon-button__ripple::after{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-press-opacity, 0.12)}:root .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}:root .mdc-data-table__row--selected{background-color:rgba(189, 189, 189, 0.04)}:root .mdc-data-table__row:not(.mdc-data-table__row--selected):hover{background-color:rgba(189, 189, 189, 0.08)}:root .mdc-data-table__header-cell{color:rgba(0, 0, 0, 0.87)}:root .mdc-data-table__pagination-total,:root .mdc-data-table__pagination-rows-per-page-label,:root .mdc-data-table__cell{color:rgba(0, 0, 0, 0.87)}:root .mdc-data-table__pagination-rows-per-page-select:not(.mdc-select--disabled) .mdc-notched-outline__leading,:root .mdc-data-table__pagination-rows-per-page-select:not(.mdc-select--disabled) .mdc-notched-outline__notch,:root .mdc-data-table__pagination-rows-per-page-select:not(.mdc-select--disabled) .mdc-notched-outline__trailing{border-color:rgba(0, 0, 0, 0.12)}:root .mdc-data-table__cell,:root .mdc-data-table__header-cell{border-bottom-color:rgba(0,0,0,.12)}:root .mdc-data-table__pagination{border-top-color:rgba(0,0,0,.12)}:root .mdc-data-table{width:100%;border-width:0;white-space:normal}:root .mdc-data-table__header-cell{font-family:var(--mdc-typography-font-family);font-size:var(--mdc-typography-body2-font-size);font-weight:600;line-height:var(--mdc-typography-body2-line-height)}:root .mdc-data-table__sort-icon-button{font-size:1rem}:root mdc-drawer{border-color:rgba(0,0,0,.12)}:root .mdc-drawer{border-color:rgba(0, 0, 0, 0.12)}:root .mdc-drawer .mdc-drawer__title{color:rgba(0, 0, 0, 0.87)}:root .mdc-drawer .mdc-deprecated-list-group__subheader{color:rgba(0, 0, 0, 0.6)}:root .mdc-drawer .mdc-drawer__subtitle{color:rgba(0, 0, 0, 0.6)}:root .mdc-drawer .mdc-deprecated-list-item__graphic{color:rgba(0, 0, 0, 0.6)}:root .mdc-drawer .mdc-deprecated-list-divider{border-bottom-color:rgba(0, 0, 0, 0.12)}:root td-icon-button{color:rgba(0,0,0,.54)}:root .mdc-icon-button{color:rgba(0, 0, 0, 0.54)}:root .mdc-icon-button .mdc-icon-button__ripple::before,:root .mdc-icon-button .mdc-icon-button__ripple::after{background-color:rgba(0, 0, 0, 0.54);background-color:var(--mdc-ripple-color, rgba(0, 0, 0, 0.54))}:root .mdc-icon-button:hover .mdc-icon-button__ripple::before,:root .mdc-icon-button.mdc-ripple-surface--hover .mdc-icon-button__ripple::before{opacity:0.04;opacity:var(--mdc-ripple-hover-opacity, 0.04)}:root .mdc-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__ripple::before,:root .mdc-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__ripple::before{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-focus-opacity, 0.12)}:root .mdc-icon-button:not(.mdc-ripple-upgraded) .mdc-icon-button__ripple::after{transition:opacity 150ms linear}:root .mdc-icon-button:not(.mdc-ripple-upgraded):active .mdc-icon-button__ripple::after{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-press-opacity, 0.12)}:root .mdc-icon-button.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}:root .mdc-deprecated-list-divider{border-bottom-color:rgba(0, 0, 0, 0.12)}:root .mdc-list-divider{background-color:rgba(0, 0, 0, 0.12)}:root .mdc-menu .mdc-deprecated-list{color:rgba(0, 0, 0, 0.87)}:root .mdc-list.mdc-list-item--with-one-line{height:var(--mdc-list-single-line-height, 48px)}:root .mdc-list.mdc-list-item--with-two-lines{height:var(--mdc-list-two-line-height, 72px)}:root .mdc-list .mdc-list-item{height:var(--mdc-list-single-line-height, 48px);display:flex;align-items:center;justify-content:flex-start}:root .mdc-list.mdc-list--two-line .mdc-list-item{height:var(--mdc-list-two-line-height, 72px)}:root .mdc-list.mdc-list--two-line .mdc-list-item .mdc-list-item__primary-text{display:block;margin-bottom:-8px}:root .mdc-deprecated-list.mdc-deprecated-list--avatar-list .mdc-deprecated-list-item__graphic,:root td-list-item[graphic=avatar] td-icon[slot=graphic]{background-color:var(--mdc-theme-surface-neutral-highlight)}:root td-list-item,:root td-check-list-item,:root .mdc-list,:root .td-list-item,:root .mdc-deprecated-list,:root .mdc-deprecated-list-item__text,:root .mdc-list-item__primary-text{font-family:var(--mdc-typography-font-family);font-size:var(--mdc-typography-body1-font-size);font-weight:var(--mdc-typography-body1-font-weight);line-height:var(--mdc-typography-body1-line-height)}:root td-list-item span[slot=secondary] td-icon{font-size:1rem;margin-right:.25rem;position:relative;top:3px}:root td-list-item span[slot=secondary].status-caution{color:var(--mdc-theme-caution)}:root td-list-item span[slot=secondary].status-negative{color:var(--mdc-theme-negative)}:root td-list-item span[slot=secondary].status-positive{color:var(--mdc-theme-positive)}:root .beta-list-item{--mdc-theme-primary: #ffb74d}:root [divider]{border-bottom:1px solid;list-style:none;border-color:var(--mdc-theme-border, rgba(0, 0, 0, 0.12))}:root .mdc-radio .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:rgba(0, 0, 0, 0.54)}:root:not(.mdc-select--disabled) .mdc-floating-label--float-above{color:rgba(0, 0, 0, 0.54)}:root:not(.mdc-select--disabled):not(.mdc-select--focused):hover .mdc-floating-label--float-above{color:rgba(0, 0, 0, 0.54)}:root .mdc-select:not(.mdc-select--disabled) .mdc-select__selected-text{color:rgba(0, 0, 0, 0.87)}:root .mdc-select:not(.mdc-select--disabled) .mdc-floating-label{color:rgba(0, 0, 0, 0.54)}:root .mdc-select:not(.mdc-select--disabled) .mdc-select__anchor{background-color:#eee}:root .mdc-select:not(.mdc-select--disabled) .mdc-notched-outline__leading,:root .mdc-select:not(.mdc-select--disabled) .mdc-notched-outline__notch,:root .mdc-select:not(.mdc-select--disabled) .mdc-notched-outline__trailing{border-color:rgba(0, 0, 0, 0.12)}:root .mdc-select:not(.mdc-select--disabled):not(.mdc-select--focused) .mdc-select__anchor:hover .mdc-notched-outline .mdc-notched-outline__leading,:root .mdc-select:not(.mdc-select--disabled):not(.mdc-select--focused) .mdc-select__anchor:hover .mdc-notched-outline .mdc-notched-outline__notch,:root .mdc-select:not(.mdc-select--disabled):not(.mdc-select--focused) .mdc-select__anchor:hover .mdc-notched-outline .mdc-notched-outline__trailing{border-color:rgba(0, 0, 0, 0.54)}:root .mdc-select:not(.mdc-select--disabled) .mdc-select__dropdown-icon{fill:rgba(0, 0, 0, 0.54)}:root .mdc-select:not(.mdc-select--disabled) .mdc-line-ripple::before{border-bottom-color:rgba(0, 0, 0, 0.12)}:root .mdc-select:not(.mdc-select--disabled):hover .mdc-line-ripple::before{border-bottom-color:rgba(0, 0, 0, 0.54)}:root .mdc-select:not(.mdc-select--disabled) .mdc-line-ripple::after{border-bottom-color:#007373}:root .mdc-select--outlined:not(.mdc-select--disabled) .mdc-select__anchor{background-color:transparent}:root td-snackbar td-icon-button{color:white}:root td-switch,:root .mdc-switch{--mdc-theme-surface: #f5f5f5;--mdc-switch-selected-handle-color: var(--mdc-theme-primary);--mdc-switch-selected-hover-handle-color: var(--mdc-theme-primary);--mdc-switch-selected-focus-handle-color: var(--mdc-theme-primary);--mdc-switch-selected-pressed-handle-color: var(--mdc-theme-primary);--mdc-switch-selected-track-color: var(--mdc-theme-surface-secondary);--mdc-switch-selected-focus-track-color: var( --mdc-theme-surface-secondary-highlight );--mdc-switch-selected-hover-track-color: var( --mdc-theme-surface-secondary-highlight-hover );--mdc-switch-selected-pressed-track-color: var( --mdc-theme-surface-secondary-highlight-hover )}:root .mdc-tab:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mdc-theme-text-primary-on-background)}:root .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input{color:rgba(0, 0, 0, 0.54)}:root .mdc-text-field:not(.mdc-text-field--disabled) .mdc-floating-label{color:rgba(0, 0, 0, 0.54)}:root .mdc-text-field:not(.mdc-text-field--disabled){background-color:#eee}:root .mdc-text-field:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,:root .mdc-text-field:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,:root .mdc-text-field:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing{border-color:rgba(0, 0, 0, 0.12)}:root .mdc-text-field:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:rgba(0, 0, 0, 0.12)}:root .mdc-text-field:not(.mdc-text-field--disabled):hover .mdc-line-ripple::before{border-bottom-color:rgba(0, 0, 0, 0.54)}:root .mdc-text-field:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:#007373}:root .mdc-text-field:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,:root .mdc-text-field:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,:root .mdc-text-field:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing{border-color:#007373}:root .mdc-text-field:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__leading,:root .mdc-text-field:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__notch,:root .mdc-text-field:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__trailing{border-color:rgba(0, 0, 0, 0.54)}:root .mdc-text-field:not(.mdc-text-field--disabled)+.mdc-text-field-helper-line .mdc-text-field-helper-text{color:rgba(0, 0, 0, 0.54)}:root .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__icon--leading{color:rgba(0, 0, 0, 0.54)}:root .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__icon--trailing{color:rgba(0, 0, 0, 0.54)}:root .mdc-text-field--outlined:not(.mdc-text-field--disabled){background-color:transparent}:root td-top-app-bar,:root td-top-app-bar-fixed,:root .mdc-top-app-bar,:root .mdc-top-app-bar-fixed{--mdc-theme-primary: white;--mdc-theme-on-primary: rgba(0, 0, 0, 0.87);background-color:white;color:rgba(0, 0, 0, 0.87)}:root td-top-app-bar td-button,:root td-top-app-bar-fixed td-button,:root .mdc-top-app-bar td-button,:root .mdc-top-app-bar-fixed td-button{--mdc-theme-primary: #007373;--mdc-theme-on-primary: white}:root td-top-app-bar .mdc-top-app-bar__action-item,:root td-top-app-bar .mdc-top-app-bar__navigation-icon,:root td-top-app-bar-fixed .mdc-top-app-bar__action-item,:root td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon,:root .mdc-top-app-bar .mdc-top-app-bar__action-item,:root .mdc-top-app-bar .mdc-top-app-bar__navigation-icon,:root .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item,:root .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon{color:rgba(0, 0, 0, 0.54)}:root td-top-app-bar .mdc-top-app-bar__action-item::before,:root td-top-app-bar .mdc-top-app-bar__action-item::after,:root td-top-app-bar .mdc-top-app-bar__navigation-icon::before,:root td-top-app-bar .mdc-top-app-bar__navigation-icon::after,:root td-top-app-bar-fixed .mdc-top-app-bar__action-item::before,:root td-top-app-bar-fixed .mdc-top-app-bar__action-item::after,:root td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon::before,:root td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon::after,:root .mdc-top-app-bar .mdc-top-app-bar__action-item::before,:root .mdc-top-app-bar .mdc-top-app-bar__action-item::after,:root .mdc-top-app-bar .mdc-top-app-bar__navigation-icon::before,:root .mdc-top-app-bar .mdc-top-app-bar__navigation-icon::after,:root .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item::before,:root .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item::after,:root .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon::before,:root .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon::after{background-color:rgba(0, 0, 0, 0.54);background-color:var(--mdc-ripple-color, rgba(0, 0, 0, 0.54))}:root td-top-app-bar .mdc-top-app-bar__action-item:hover::before,:root td-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-surface--hover::before,:root td-top-app-bar .mdc-top-app-bar__navigation-icon:hover::before,:root td-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-surface--hover::before,:root td-top-app-bar-fixed .mdc-top-app-bar__action-item:hover::before,:root td-top-app-bar-fixed .mdc-top-app-bar__action-item.mdc-ripple-surface--hover::before,:root td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:hover::before,:root td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon.mdc-ripple-surface--hover::before,:root .mdc-top-app-bar .mdc-top-app-bar__action-item:hover::before,:root .mdc-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-surface--hover::before,:root .mdc-top-app-bar .mdc-top-app-bar__navigation-icon:hover::before,:root .mdc-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-surface--hover::before,:root .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item:hover::before,:root .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item.mdc-ripple-surface--hover::before,:root .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:hover::before,:root .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon.mdc-ripple-surface--hover::before{opacity:0.04;opacity:var(--mdc-ripple-hover-opacity, 0.04)}:root td-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-upgraded--background-focused::before,:root td-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):focus::before,:root td-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded--background-focused::before,:root td-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):focus::before,:root td-top-app-bar-fixed .mdc-top-app-bar__action-item.mdc-ripple-upgraded--background-focused::before,:root td-top-app-bar-fixed .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):focus::before,:root td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded--background-focused::before,:root td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):focus::before,:root .mdc-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-upgraded--background-focused::before,:root .mdc-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):focus::before,:root .mdc-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded--background-focused::before,:root .mdc-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):focus::before,:root .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item.mdc-ripple-upgraded--background-focused::before,:root .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):focus::before,:root .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded--background-focused::before,:root .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-focus-opacity, 0.12)}:root td-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded)::after,:root td-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded)::after,:root td-top-app-bar-fixed .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded)::after,:root td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded)::after,:root .mdc-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded)::after,:root .mdc-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded)::after,:root .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded)::after,:root .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}:root td-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):active::after,:root td-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):active::after,:root td-top-app-bar-fixed .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):active::after,:root td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):active::after,:root .mdc-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):active::after,:root .mdc-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):active::after,:root .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):active::after,:root .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-press-opacity, 0.12)}:root td-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-upgraded,:root td-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded,:root td-top-app-bar-fixed .mdc-top-app-bar__action-item.mdc-ripple-upgraded,:root td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded,:root .mdc-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-upgraded,:root .mdc-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded,:root .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item.mdc-ripple-upgraded,:root .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}:root a[href]{color:var(--mdc-theme-secondary);text-decoration:underline}:root a[href]:hover{text-decoration:none}.dark{--mdc-theme-primary: #59cecd;--mdc-theme-secondary: #59cecd;--mdc-theme-error: #f46f5a;--mdc-theme-negative: #f46f5a;--mdc-theme-positive: #42bd41;--mdc-theme-caution: #ffb74d;--mdc-theme-emphasis: #b0bec5;--mdc-theme-accent: #59cecd;--mdc-theme-background: #161c1f;--mdc-ripple-color: white;--mdc-theme-surface: #28353b;--mdc-theme-surface-canvas: #101314;--mdc-theme-surface-primary: #045c5c;--mdc-theme-surface-primary-highlight: rgba(4, 92, 92, 0.4);--mdc-theme-surface-primary-highlight-hover: rgba(4, 92, 92, 0.6);--mdc-theme-surface-secondary: #045c5c;--mdc-theme-surface-secondary-highlight: rgba(4, 92, 92, 0.4);--mdc-theme-surface-secondary-highlight-hover: rgba(4, 92, 92, 0.6);--mdc-theme-surface-caution: #704c16;--mdc-theme-surface-caution-highlight: rgba(112, 76, 22, 0.4);--mdc-theme-surface-caution-highlight-hover: rgba(112, 76, 22, 0.6);--mdc-theme-surface-negative: #883e32;--mdc-theme-surface-negative-highlight: rgba(136, 62, 50, 0.4);--mdc-theme-surface-negative-highlight-hover: rgba(136, 62, 50, 0.6);--mdc-theme-surface-positive: #336033;--mdc-theme-surface-positive-highlight: rgba(51, 96, 51, 0.4);--mdc-theme-surface-positive-highlight-hover: rgba(51, 96, 51, 0.6);--mdc-theme-surface-neutral: #43515a;--mdc-theme-surface-neutral-highlight: rgba(67, 81, 90, 0.4);--mdc-theme-surface-neutral-highlight-hover: rgba(67, 81, 90, 0.6);--mdc-theme-surface-emphasis: #43515a;--mdc-theme-surface-emphasis-highlight: rgba(67, 81, 90, 0.4);--mdc-theme-surface-emphasis-highlight-hover: rgba(67, 81, 90, 0.6);--mdc-theme-on-primary: rgba(0, 0, 0, 0.87);--mdc-theme-on-secondary: rgba(0, 0, 0, 0.87);--mdc-theme-on-surface: white;--mdc-theme-border: rgba(255, 255, 255, 0.2);--mdc-theme-surface-accent: #045c5c;--mdc-theme-surface-accent-highlight: rgba(4, 92, 92, 0.4);--mdc-theme-surface-accent-highlight-hover: rgba(4, 92, 92, 0.6);--mdc-typography-font-family: Arial, sans-serif;--mdc-typography-headline1-font-family: Poppins, sans-serif;--mdc-typography-headline1-font-size: 96px;--mdc-typography-headline1-font-weight: 500;--mdc-typography-headline1-line-height: 112px;--mdc-typography-headline2-font-family: Poppins, sans-serif;--mdc-typography-headline2-font-size: 60px;--mdc-typography-headline2-font-weight: 600;--mdc-typography-headline2-line-height: 84px;--mdc-typography-headline3-font-family: Poppins, sans-serif;--mdc-typography-headline3-font-size: 48px;--mdc-typography-headline3-font-weight: 600;--mdc-typography-headline3-line-height: 64px;--mdc-typography-headline4-font-family: Poppins, sans-serif;--mdc-typography-headline4-font-size: 34px;--mdc-typography-headline4-font-weight: 700;--mdc-typography-headline4-line-height: 48px;--mdc-typography-headline5-font-family: Poppins, sans-serif;--mdc-typography-headline5-font-size: 24px;--mdc-typography-headline5-font-weight: 700;--mdc-typography-headline5-line-height: 36px;--mdc-typography-headline6-font-family: Poppins, sans-serif;--mdc-typography-headline6-font-size: 20px;--mdc-typography-headline6-font-weight: 700;--mdc-typography-headline6-line-height: 28px;--mdc-typography-subtitle1-font-family: Poppins, sans-serif;--mdc-typography-subtitle1-font-size: 14px;--mdc-typography-subtitle1-font-weight: 600;--mdc-typography-subtitle1-line-height: 20px;--mdc-typography-subtitle2-font-family: Poppins, sans-serif;--mdc-typography-subtitle2-font-size: 16px;--mdc-typography-subtitle2-font-weight: 600;--mdc-typography-subtitle2-line-height: 24px;--mdc-typography-body1-font-family: var(--mdc-typography-font-family);--mdc-typography-body1-font-size: 16px;--mdc-typography-body1-font-weight: 400;--mdc-typography-body1-line-height: 24px;--mdc-typography-body2-font-family: var(--mdc-typography-font-family);--mdc-typography-body2-font-size: 14px;--mdc-typography-body2-font-weight: 400;--mdc-typography-body2-line-height: 20px;--mdc-typography-button-font-family: Poppins, sans-serif;--mdc-typography-button-font-size: 14px;--mdc-typography-button-font-weight: 600;--mdc-typography-button-line-height: 16px;--mdc-typography-caption-font-family: var(--mdc-typography-font-family);--mdc-typography-caption-font-size: 12px;--mdc-typography-caption-font-weight: 400;--mdc-typography-caption-line-height: 16px;--mdc-theme-text-primary-on-background: white;--mdc-theme-text-secondary-on-background: rgba(255, 255, 255, 0.7);--mdc-theme-text-hint-on-background: rgba(255, 255, 255, 0.5);--mdc-theme-text-disabled-on-background: rgba(255, 255, 255, 0.5);--mdc-theme-text-icon-on-background: white;--mdc-theme-text-primary-on-light: rgba(0, 0, 0, 0.87);--mdc-theme-text-secondary-on-light: rgba(0, 0, 0, 0.54);--mdc-theme-text-hint-on-light: rgba(0, 0, 0, 0.38);--mdc-theme-text-disabled-on-light: rgba(0, 0, 0, 0.38);--mdc-theme-text-icon-on-light: rgba(0, 0, 0, 0.54);--mdc-theme-text-primary-on-dark: white;--mdc-theme-text-secondary-on-dark: rgba(255, 255, 255, 0.7);--mdc-theme-text-hint-on-dark: rgba(255, 255, 255, 0.5);--mdc-theme-text-disabled-on-dark: rgba(255, 255, 255, 0.5);--mdc-theme-text-icon-on-dark: white;--covalent-theme-text-logo-on-background: white;--mdc-shape-small: 8px;--mdc-shape-medium: 8px;--mdc-theme-error: #f46f5a;--mdc-checkbox-checked-color: #59cecd;--mdc-checkbox-disabled-color: rgba(255, 255, 255, 0.5);--mdc-checkbox-ink-color: rgba(0, 0, 0, 0.87);--mdc-checkbox-unchecked-color: white;border-width:0;border-style:solid;--mdc-dialog-heading-ink-color: white;--mdc-dialog-content-ink-color: white;--mdc-dialog-scroll-divider-color: rgba(255, 255, 255, 0.2);--mdc-linear-progress-buffer-color: rgba(255, 255, 255, 0.2);--mdc-list-single-line-height: 48px;--mdc-list-two-line-height: 72px;--mdc-radio-unchecked-color: white;--mdc-select-idle-line-color: rgba(255, 255, 255, 0.2);--mdc-select-hover-line-color: white;--mdc-select-fill-color: #101314;--mdc-select-ink-color: white;--mdc-select-label-ink-color: rgba(255, 255, 255, 0.7);--mdc-select-outlined-idle-border-color: rgba(255, 255, 255, 0.2);--mdc-select-outlined-hover-border-color: white;--mdc-select-dropdown-icon-color: white;--mdc-snackbar-action-color: #59cecd;--mdc-tab-text-label-color-default: var( --mdc-theme-text-primary-on-background );--mdc-tab-color-default: var(--mdc-theme-text-icon-on-background);--mdc-text-field-label-ink-color: rgba(255, 255, 255, 0.7);--mdc-text-field-ink-color: rgba(255, 255, 255, 0.7);--mdc-text-field-fill-color: #101314;--mdc-text-field-idle-line-color: rgba(255, 255, 255, 0.2);--mdc-text-field-hover-line-color: white;--mdc-text-field-outlined-idle-border-color: rgba(255, 255, 255, 0.2);--mdc-text-field-outlined-hover-border-color: white;color:var(--mdc-theme-text-primary-on-background)}.dark td-button{--mdc-button-outline-color: white;--mdc-theme-primary: white}.dark td-button[outlined].accent.primary,.dark td-button[raised].accent.primary,.dark td-button[text].accent.primary{--mdc-theme-primary: #59cecd;--mdc-button-outline-color: var(--mdc-theme-primary)}.dark td-button[outlined].destructive.primary,.dark td-button[raised].destructive.primary,.dark td-button[text].destructive.primary,.dark td-button[outlined].negative.primary,.dark td-button[raised].negative.primary,.dark td-button[text].negative.primary{--mdc-theme-primary: var(--mdc-theme-error);--mdc-button-outline-color: var(--mdc-theme-error)}.dark .mdc-button:not(:disabled){--mdc-button-outline-color: white;--mdc-theme-primary: white}.dark .mdc-button:not(:disabled):not(:disabled){border-color:white}.dark .mdc-button:not(:disabled).accent{--mdc-theme-primary: #59cecd;--mdc-button-outline-color: var(--mdc-theme-primary);border-color:var(--mdc-button-outline-color)}.dark .mdc-button:not(:disabled).destructive,.dark .mdc-button:not(:disabled).negative{--mdc-theme-primary: #f46f5a;--mdc-button-outline-color: var(--mdc-theme-primary);border-color:var(--mdc-button-outline-color)}.dark .mdc-card.mdc-card--outlined{background-color:#161c1f}.dark .mdc-data-table__sort-icon-button{color:rgba(255, 255, 255, 0.5)}.dark .mdc-data-table__sort-icon-button .mdc-icon-button__ripple::before,.dark .mdc-data-table__sort-icon-button .mdc-icon-button__ripple::after{background-color:rgba(255, 255, 255, 0.5);background-color:var(--mdc-ripple-color, rgba(255, 255, 255, 0.5))}.dark .mdc-data-table__sort-icon-button:hover .mdc-icon-button__ripple::before,.dark .mdc-data-table__sort-icon-button.mdc-ripple-surface--hover .mdc-icon-button__ripple::before{opacity:0.08;opacity:var(--mdc-ripple-hover-opacity, 0.08)}.dark .mdc-data-table__sort-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__ripple::before,.dark .mdc-data-table__sort-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__ripple::before{transition-duration:75ms;opacity:0.24;opacity:var(--mdc-ripple-focus-opacity, 0.24)}.dark .mdc-data-table__sort-icon-button:not(.mdc-ripple-upgraded) .mdc-icon-button__ripple::after{transition:opacity 150ms linear}.dark .mdc-data-table__sort-icon-button:not(.mdc-ripple-upgraded):active .mdc-icon-button__ripple::after{transition-duration:75ms;opacity:0.24;opacity:var(--mdc-ripple-press-opacity, 0.24)}.dark .mdc-data-table__sort-icon-button.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.24)}.dark .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button{color:white}.dark .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button .mdc-icon-button__ripple::before,.dark .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button .mdc-icon-button__ripple::after{background-color:white;background-color:var(--mdc-ripple-color, white)}.dark .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button:hover .mdc-icon-button__ripple::before,.dark .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button.mdc-ripple-surface--hover .mdc-icon-button__ripple::before{opacity:0.08;opacity:var(--mdc-ripple-hover-opacity, 0.08)}.dark .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__ripple::before,.dark .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__ripple::before{transition-duration:75ms;opacity:0.24;opacity:var(--mdc-ripple-focus-opacity, 0.24)}.dark .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button:not(.mdc-ripple-upgraded) .mdc-icon-button__ripple::after{transition:opacity 150ms linear}.dark .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button:not(.mdc-ripple-upgraded):active .mdc-icon-button__ripple::after{transition-duration:75ms;opacity:0.24;opacity:var(--mdc-ripple-press-opacity, 0.24)}.dark .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.24)}.dark .mdc-data-table__row--selected{background-color:rgba(67, 81, 90, 0.4)}.dark .mdc-data-table__row:not(.mdc-data-table__row--selected):hover{background-color:rgba(67, 81, 90, 0.6)}.dark .mdc-data-table__header-cell{color:white}.dark .mdc-data-table__pagination-total,.dark .mdc-data-table__pagination-rows-per-page-label,.dark .mdc-data-table__cell{color:white}.dark .mdc-data-table__pagination-rows-per-page-select:not(.mdc-select--disabled) .mdc-notched-outline__leading,.dark .mdc-data-table__pagination-rows-per-page-select:not(.mdc-select--disabled) .mdc-notched-outline__notch,.dark .mdc-data-table__pagination-rows-per-page-select:not(.mdc-select--disabled) .mdc-notched-outline__trailing{border-color:rgba(255, 255, 255, 0.2)}.dark .mdc-data-table__cell,.dark .mdc-data-table__header-cell{border-bottom-color:rgba(255,255,255,.2)}.dark .mdc-data-table__pagination{border-top-color:rgba(255,255,255,.2)}.dark .mdc-data-table{width:100%;border-width:0;white-space:normal}.dark .mdc-data-table__header-cell{font-family:var(--mdc-typography-font-family);font-size:var(--mdc-typography-body2-font-size);font-weight:600;line-height:var(--mdc-typography-body2-line-height)}.dark .mdc-data-table__sort-icon-button{font-size:1rem}.dark mdc-drawer{border-color:rgba(255,255,255,.2)}.dark .mdc-drawer{border-color:rgba(255, 255, 255, 0.12)}.dark .mdc-drawer .mdc-drawer__title{color:rgba(255, 255, 255, 0.87)}.dark .mdc-drawer .mdc-deprecated-list-group__subheader{color:rgba(255, 255, 255, 0.6)}.dark .mdc-drawer .mdc-drawer__subtitle{color:rgba(255, 255, 255, 0.6)}.dark .mdc-drawer .mdc-deprecated-list-item__graphic{color:rgba(255, 255, 255, 0.6)}.dark .mdc-drawer .mdc-deprecated-list-divider{border-bottom-color:rgba(255, 255, 255, 0.12)}.dark td-icon-button{color:#fff}.dark .mdc-icon-button{color:white}.dark .mdc-icon-button .mdc-icon-button__ripple::before,.dark .mdc-icon-button .mdc-icon-button__ripple::after{background-color:white;background-color:var(--mdc-ripple-color, white)}.dark .mdc-icon-button:hover .mdc-icon-button__ripple::before,.dark .mdc-icon-button.mdc-ripple-surface--hover .mdc-icon-button__ripple::before{opacity:0.08;opacity:var(--mdc-ripple-hover-opacity, 0.08)}.dark .mdc-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__ripple::before,.dark .mdc-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__ripple::before{transition-duration:75ms;opacity:0.24;opacity:var(--mdc-ripple-focus-opacity, 0.24)}.dark .mdc-icon-button:not(.mdc-ripple-upgraded) .mdc-icon-button__ripple::after{transition:opacity 150ms linear}.dark .mdc-icon-button:not(.mdc-ripple-upgraded):active .mdc-icon-button__ripple::after{transition-duration:75ms;opacity:0.24;opacity:var(--mdc-ripple-press-opacity, 0.24)}.dark .mdc-icon-button.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.24)}.dark .mdc-deprecated-list-divider{border-bottom-color:rgba(255, 255, 255, 0.2)}.dark .mdc-list-divider{background-color:rgba(255, 255, 255, 0.2)}.dark .mdc-menu .mdc-deprecated-list{color:white}.dark .mdc-list.mdc-list-item--with-one-line{height:var(--mdc-list-single-line-height, 48px)}.dark .mdc-list.mdc-list-item--with-two-lines{height:var(--mdc-list-two-line-height, 72px)}.dark .mdc-list .mdc-list-item{height:var(--mdc-list-single-line-height, 48px);display:flex;align-items:center;justify-content:flex-start}.dark .mdc-list.mdc-list--two-line .mdc-list-item{height:var(--mdc-list-two-line-height, 72px)}.dark .mdc-list.mdc-list--two-line .mdc-list-item .mdc-list-item__primary-text{display:block;margin-bottom:-8px}.dark .mdc-deprecated-list.mdc-deprecated-list--avatar-list .mdc-deprecated-list-item__graphic,.dark td-list-item[graphic=avatar] td-icon[slot=graphic]{background-color:var(--mdc-theme-surface-neutral-highlight)}.dark td-list-item,.dark td-check-list-item,.dark .mdc-list,.dark .td-list-item,.dark .mdc-deprecated-list,.dark .mdc-deprecated-list-item__text,.dark .mdc-list-item__primary-text{font-family:var(--mdc-typography-font-family);font-size:var(--mdc-typography-body1-font-size);font-weight:var(--mdc-typography-body1-font-weight);line-height:var(--mdc-typography-body1-line-height)}.dark td-list-item span[slot=secondary] td-icon{font-size:1rem;margin-right:.25rem;position:relative;top:3px}.dark td-list-item span[slot=secondary].status-caution{color:var(--mdc-theme-caution)}.dark td-list-item span[slot=secondary].status-negative{color:var(--mdc-theme-negative)}.dark td-list-item span[slot=secondary].status-positive{color:var(--mdc-theme-positive)}.dark .beta-list-item{--mdc-theme-primary: #704c16}.dark [divider]{border-bottom:1px solid;list-style:none;border-color:var(--mdc-theme-border, rgba(0, 0, 0, 0.12))}.dark .mdc-radio .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:white}.dark:not(.mdc-select--disabled) .mdc-floating-label--float-above{color:rgba(255, 255, 255, 0.7)}.dark:not(.mdc-select--disabled):not(.mdc-select--focused):hover .mdc-floating-label--float-above{color:rgba(255, 255, 255, 0.7)}.dark .mdc-select:not(.mdc-select--disabled) .mdc-select__selected-text{color:white}.dark .mdc-select:not(.mdc-select--disabled) .mdc-floating-label{color:rgba(255, 255, 255, 0.7)}.dark .mdc-select:not(.mdc-select--disabled) .mdc-select__anchor{background-color:#101314}.dark .mdc-select:not(.mdc-select--disabled) .mdc-notched-outline__leading,.dark .mdc-select:not(.mdc-select--disabled) .mdc-notched-outline__notch,.dark .mdc-select:not(.mdc-select--disabled) .mdc-notched-outline__trailing{border-color:rgba(255, 255, 255, 0.2)}.dark .mdc-select:not(.mdc-select--disabled):not(.mdc-select--focused) .mdc-select__anchor:hover .mdc-notched-outline .mdc-notched-outline__leading,.dark .mdc-select:not(.mdc-select--disabled):not(.mdc-select--focused) .mdc-select__anchor:hover .mdc-notched-outline .mdc-notched-outline__notch,.dark .mdc-select:not(.mdc-select--disabled):not(.mdc-select--focused) .mdc-select__anchor:hover .mdc-notched-outline .mdc-notched-outline__trailing{border-color:white}.dark .mdc-select:not(.mdc-select--disabled) .mdc-select__dropdown-icon{fill:white}.dark .mdc-select:not(.mdc-select--disabled) .mdc-line-ripple::before{border-bottom-color:rgba(255, 255, 255, 0.2)}.dark .mdc-select:not(.mdc-select--disabled):hover .mdc-line-ripple::before{border-bottom-color:white}.dark .mdc-select:not(.mdc-select--disabled) .mdc-line-ripple::after{border-bottom-color:#59cecd}.dark .mdc-select--outlined:not(.mdc-select--disabled) .mdc-select__anchor{background-color:transparent}.dark td-snackbar td-icon-button{color:white}.dark td-switch,.dark .mdc-switch{--mdc-theme-surface: #161c1f;--mdc-switch-selected-handle-color: var(--mdc-theme-primary);--mdc-switch-selected-hover-handle-color: var(--mdc-theme-primary);--mdc-switch-selected-focus-handle-color: var(--mdc-theme-primary);--mdc-switch-selected-pressed-handle-color: var(--mdc-theme-primary);--mdc-switch-selected-track-color: var(--mdc-theme-surface-secondary);--mdc-switch-selected-focus-track-color: var( --mdc-theme-surface-secondary-highlight );--mdc-switch-selected-hover-track-color: var( --mdc-theme-surface-secondary-highlight-hover );--mdc-switch-selected-pressed-track-color: var( --mdc-theme-surface-secondary-highlight-hover )}.dark .mdc-tab:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mdc-theme-text-primary-on-background)}.dark .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input{color:rgba(255, 255, 255, 0.7)}.dark .mdc-text-field:not(.mdc-text-field--disabled) .mdc-floating-label{color:rgba(255, 255, 255, 0.7)}.dark .mdc-text-field:not(.mdc-text-field--disabled){background-color:#101314}.dark .mdc-text-field:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,.dark .mdc-text-field:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,.dark .mdc-text-field:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing{border-color:rgba(255, 255, 255, 0.2)}.dark .mdc-text-field:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:rgba(255, 255, 255, 0.2)}.dark .mdc-text-field:not(.mdc-text-field--disabled):hover .mdc-line-ripple::before{border-bottom-color:white}.dark .mdc-text-field:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:#59cecd}.dark .mdc-text-field:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,.dark .mdc-text-field:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,.dark .mdc-text-field:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing{border-color:#59cecd}.dark .mdc-text-field:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__leading,.dark .mdc-text-field:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__notch,.dark .mdc-text-field:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__trailing{border-color:white}.dark .mdc-text-field:not(.mdc-text-field--disabled)+.mdc-text-field-helper-line .mdc-text-field-helper-text{color:rgba(255, 255, 255, 0.7)}.dark .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__icon--leading{color:white}.dark .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__icon--trailing{color:white}.dark .mdc-text-field--outlined:not(.mdc-text-field--disabled){background-color:transparent}.dark td-top-app-bar,.dark td-top-app-bar-fixed,.dark .mdc-top-app-bar,.dark .mdc-top-app-bar-fixed{--mdc-theme-primary: #28353b;--mdc-theme-on-primary: white;background-color:#28353b;color:white}.dark td-top-app-bar td-button,.dark td-top-app-bar-fixed td-button,.dark .mdc-top-app-bar td-button,.dark .mdc-top-app-bar-fixed td-button{--mdc-theme-primary: #59cecd;--mdc-theme-on-primary: rgba(0, 0, 0, 0.87)}.dark td-top-app-bar .mdc-top-app-bar__action-item,.dark td-top-app-bar .mdc-top-app-bar__navigation-icon,.dark td-top-app-bar-fixed .mdc-top-app-bar__action-item,.dark td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon,.dark .mdc-top-app-bar .mdc-top-app-bar__action-item,.dark .mdc-top-app-bar .mdc-top-app-bar__navigation-icon,.dark .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item,.dark .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon{color:white}.dark td-top-app-bar .mdc-top-app-bar__action-item::before,.dark td-top-app-bar .mdc-top-app-bar__action-item::after,.dark td-top-app-bar .mdc-top-app-bar__navigation-icon::before,.dark td-top-app-bar .mdc-top-app-bar__navigation-icon::after,.dark td-top-app-bar-fixed .mdc-top-app-bar__action-item::before,.dark td-top-app-bar-fixed .mdc-top-app-bar__action-item::after,.dark td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon::before,.dark td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon::after,.dark .mdc-top-app-bar .mdc-top-app-bar__action-item::before,.dark .mdc-top-app-bar .mdc-top-app-bar__action-item::after,.dark .mdc-top-app-bar .mdc-top-app-bar__navigation-icon::before,.dark .mdc-top-app-bar .mdc-top-app-bar__navigation-icon::after,.dark .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item::before,.dark .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item::after,.dark .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon::before,.dark .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon::after{background-color:white;background-color:var(--mdc-ripple-color, white)}.dark td-top-app-bar .mdc-top-app-bar__action-item:hover::before,.dark td-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-surface--hover::before,.dark td-top-app-bar .mdc-top-app-bar__navigation-icon:hover::before,.dark td-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-surface--hover::before,.dark td-top-app-bar-fixed .mdc-top-app-bar__action-item:hover::before,.dark td-top-app-bar-fixed .mdc-top-app-bar__action-item.mdc-ripple-surface--hover::before,.dark td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:hover::before,.dark td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon.mdc-ripple-surface--hover::before,.dark .mdc-top-app-bar .mdc-top-app-bar__action-item:hover::before,.dark .mdc-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-surface--hover::before,.dark .mdc-top-app-bar .mdc-top-app-bar__navigation-icon:hover::before,.dark .mdc-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-surface--hover::before,.dark .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item:hover::before,.dark .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item.mdc-ripple-surface--hover::before,.dark .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:hover::before,.dark .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon.mdc-ripple-surface--hover::before{opacity:0.08;opacity:var(--mdc-ripple-hover-opacity, 0.08)}.dark td-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-upgraded--background-focused::before,.dark td-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):focus::before,.dark td-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded--background-focused::before,.dark td-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):focus::before,.dark td-top-app-bar-fixed .mdc-top-app-bar__action-item.mdc-ripple-upgraded--background-focused::before,.dark td-top-app-bar-fixed .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):focus::before,.dark td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded--background-focused::before,.dark td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):focus::before,.dark .mdc-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-upgraded--background-focused::before,.dark .mdc-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):focus::before,.dark .mdc-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded--background-focused::before,.dark .mdc-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):focus::before,.dark .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item.mdc-ripple-upgraded--background-focused::before,.dark .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):focus::before,.dark .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded--background-focused::before,.dark .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:0.24;opacity:var(--mdc-ripple-focus-opacity, 0.24)}.dark td-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded)::after,.dark td-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded)::after,.dark td-top-app-bar-fixed .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded)::after,.dark td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded)::after,.dark .mdc-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded)::after,.dark .mdc-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded)::after,.dark .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded)::after,.dark .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.dark td-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):active::after,.dark td-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):active::after,.dark td-top-app-bar-fixed .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):active::after,.dark td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):active::after,.dark .mdc-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):active::after,.dark .mdc-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):active::after,.dark .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):active::after,.dark .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:0.24;opacity:var(--mdc-ripple-press-opacity, 0.24)}.dark td-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-upgraded,.dark td-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded,.dark td-top-app-bar-fixed .mdc-top-app-bar__action-item.mdc-ripple-upgraded,.dark td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded,.dark .mdc-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-upgraded,.dark .mdc-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded,.dark .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item.mdc-ripple-upgraded,.dark .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.24)}.dark a[href]{color:var(--mdc-theme-secondary);text-decoration:underline}.dark a[href]:hover{text-decoration:none}.light{--mdc-theme-primary: #007373;--mdc-theme-secondary: #007373;--mdc-theme-error: #b11d00;--mdc-theme-negative: #b11d00;--mdc-theme-positive: #0a7e07;--mdc-theme-caution: #ff8f00;--mdc-theme-emphasis: #546e7a;--mdc-theme-accent: #007373;--mdc-theme-background: #f5f5f5;--mdc-ripple-color: rgba(0, 0, 0, 0.87);--mdc-theme-surface: white;--mdc-theme-surface-canvas: #eee;--mdc-theme-surface-primary: #85dddc;--mdc-theme-surface-primary-highlight: rgba(133, 221, 220, 0.1);--mdc-theme-surface-primary-highlight-hover: rgba(133, 221, 220, 0.2);--mdc-theme-surface-secondary: #85dddc;--mdc-theme-surface-secondary-highlight: rgba(133, 221, 220, 0.1);--mdc-theme-surface-secondary-highlight-hover: rgba(133, 221, 220, 0.2);--mdc-theme-surface-caution: #ffb74d;--mdc-theme-surface-caution-highlight: rgba(255, 183, 77, 0.1);--mdc-theme-surface-caution-highlight-hover: rgba(255, 183, 77, 0.2);--mdc-theme-surface-negative: #e57373;--mdc-theme-surface-negative-highlight: rgba(229, 115, 115, 0.1);--mdc-theme-surface-negative-highlight-hover: rgba(229, 115, 115, 0.2);--mdc-theme-surface-positive: #a5d6a7;--mdc-theme-surface-positive-highlight: rgba(165, 214, 167, 0.1);--mdc-theme-surface-positive-highlight-hover: rgba(165, 214, 167, 0.2);--mdc-theme-surface-neutral: #bdbdbd;--mdc-theme-surface-neutral-highlight: rgba(189, 189, 189, 0.04);--mdc-theme-surface-neutral-highlight-hover: rgba(189, 189, 189, 0.08);--mdc-theme-surface-emphasis: #afb6b9;--mdc-theme-surface-emphasis-highlight: rgba(175, 182, 185, 0.1);--mdc-theme-surface-emphasis-highlight-hover: rgba(175, 182, 185, 0.2);--mdc-theme-on-primary: white;--mdc-theme-on-secondary: white;--mdc-theme-on-surface: rgba(0, 0, 0, 0.87);--mdc-theme-border: rgba(0, 0, 0, 0.12);--mdc-theme-surface-accent: #85dddc;--mdc-theme-surface-accent-highlight: rgba(133, 221, 220, 0.1);--mdc-theme-surface-accent-highlight-hover: rgba(133, 221, 220, 0.2);--mdc-typography-font-family: Arial, sans-serif;--mdc-typography-headline1-font-family: Poppins, sans-serif;--mdc-typography-headline1-font-size: 96px;--mdc-typography-headline1-font-weight: 500;--mdc-typography-headline1-line-height: 112px;--mdc-typography-headline2-font-family: Poppins, sans-serif;--mdc-typography-headline2-font-size: 60px;--mdc-typography-headline2-font-weight: 600;--mdc-typography-headline2-line-height: 84px;--mdc-typography-headline3-font-family: Poppins, sans-serif;--mdc-typography-headline3-font-size: 48px;--mdc-typography-headline3-font-weight: 600;--mdc-typography-headline3-line-height: 64px;--mdc-typography-headline4-font-family: Poppins, sans-serif;--mdc-typography-headline4-font-size: 34px;--mdc-typography-headline4-font-weight: 700;--mdc-typography-headline4-line-height: 48px;--mdc-typography-headline5-font-family: Poppins, sans-serif;--mdc-typography-headline5-font-size: 24px;--mdc-typography-headline5-font-weight: 700;--mdc-typography-headline5-line-height: 36px;--mdc-typography-headline6-font-family: Poppins, sans-serif;--mdc-typography-headline6-font-size: 20px;--mdc-typography-headline6-font-weight: 700;--mdc-typography-headline6-line-height: 28px;--mdc-typography-subtitle1-font-family: Poppins, sans-serif;--mdc-typography-subtitle1-font-size: 14px;--mdc-typography-subtitle1-font-weight: 600;--mdc-typography-subtitle1-line-height: 20px;--mdc-typography-subtitle2-font-family: Poppins, sans-serif;--mdc-typography-subtitle2-font-size: 16px;--mdc-typography-subtitle2-font-weight: 600;--mdc-typography-subtitle2-line-height: 24px;--mdc-typography-body1-font-family: var(--mdc-typography-font-family);--mdc-typography-body1-font-size: 16px;--mdc-typography-body1-font-weight: 400;--mdc-typography-body1-line-height: 24px;--mdc-typography-body2-font-family: var(--mdc-typography-font-family);--mdc-typography-body2-font-size: 14px;--mdc-typography-body2-font-weight: 400;--mdc-typography-body2-line-height: 20px;--mdc-typography-button-font-family: Poppins, sans-serif;--mdc-typography-button-font-size: 14px;--mdc-typography-button-font-weight: 600;--mdc-typography-button-line-height: 16px;--mdc-typography-caption-font-family: var(--mdc-typography-font-family);--mdc-typography-caption-font-size: 12px;--mdc-typography-caption-font-weight: 400;--mdc-typography-caption-line-height: 16px;--mdc-theme-text-primary-on-background: rgba(0, 0, 0, 0.87);--mdc-theme-text-secondary-on-background: rgba(0, 0, 0, 0.54);--mdc-theme-text-hint-on-background: rgba(0, 0, 0, 0.38);--mdc-theme-text-disabled-on-background: rgba(0, 0, 0, 0.38);--mdc-theme-text-icon-on-background: rgba(0, 0, 0, 0.54);--mdc-theme-text-primary-on-light: rgba(0, 0, 0, 0.87);--mdc-theme-text-secondary-on-light: rgba(0, 0, 0, 0.54);--mdc-theme-text-hint-on-light: rgba(0, 0, 0, 0.38);--mdc-theme-text-disabled-on-light: rgba(0, 0, 0, 0.38);--mdc-theme-text-icon-on-light: rgba(0, 0, 0, 0.54);--mdc-theme-text-primary-on-dark: 255, 255, 255;--mdc-theme-text-secondary-on-dark: rgba(255, 255, 255, 0.7);--mdc-theme-text-hint-on-dark: rgba(255, 255, 255, 0.5);--mdc-theme-text-disabled-on-dark: rgba(255, 255, 255, 0.5);--mdc-theme-text-icon-on-dark: white;--covalent-theme-text-logo-on-background: #354145;--mdc-shape-small: 8px;--mdc-shape-medium: 8px;--mdc-theme-error: #b11d00;--mdc-checkbox-checked-color: #007373;--mdc-checkbox-disabled-color: rgba(0, 0, 0, 0.38);--mdc-checkbox-ink-color: white;--mdc-checkbox-unchecked-color: rgba(0, 0, 0, 0.54);border-width:0;border-style:solid;--mdc-dialog-heading-ink-color: rgba(0, 0, 0, 0.87);--mdc-dialog-content-ink-color: rgba(0, 0, 0, 0.87);--mdc-dialog-scroll-divider-color: rgba(0, 0, 0, 0.12);--mdc-linear-progress-buffer-color: rgba(0, 0, 0, 0.12);--mdc-list-single-line-height: 48px;--mdc-list-two-line-height: 72px;--mdc-radio-unchecked-color: rgba(0, 0, 0, 0.54);--mdc-select-idle-line-color: rgba(0, 0, 0, 0.12);--mdc-select-hover-line-color: rgba(0, 0, 0, 0.54);--mdc-select-fill-color: #eee;--mdc-select-ink-color: rgba(0, 0, 0, 0.87);--mdc-select-label-ink-color: rgba(0, 0, 0, 0.54);--mdc-select-outlined-idle-border-color: rgba(0, 0, 0, 0.12);--mdc-select-outlined-hover-border-color: rgba(0, 0, 0, 0.54);--mdc-select-dropdown-icon-color: rgba(0, 0, 0, 0.54);--mdc-snackbar-action-color: #007373;--mdc-tab-text-label-color-default: var( --mdc-theme-text-primary-on-background );--mdc-tab-color-default: var(--mdc-theme-text-icon-on-background);--mdc-text-field-label-ink-color: rgba(0, 0, 0, 0.54);--mdc-text-field-ink-color: rgba(0, 0, 0, 0.54);--mdc-text-field-fill-color: #eee;--mdc-text-field-idle-line-color: rgba(0, 0, 0, 0.12);--mdc-text-field-hover-line-color: rgba(0, 0, 0, 0.54);--mdc-text-field-outlined-idle-border-color: rgba(0, 0, 0, 0.12);--mdc-text-field-outlined-hover-border-color: rgba(0, 0, 0, 0.54);color:var(--mdc-theme-text-primary-on-background)}.light td-button{--mdc-button-outline-color: rgba(0, 0, 0, 0.54);--mdc-theme-primary: rgba(0, 0, 0, 0.87)}.light td-button[outlined].accent.primary,.light td-button[raised].accent.primary,.light td-button[text].accent.primary{--mdc-theme-primary: #007373;--mdc-button-outline-color: var(--mdc-theme-primary)}.light td-button[outlined].destructive.primary,.light td-button[raised].destructive.primary,.light td-button[text].destructive.primary,.light td-button[outlined].negative.primary,.light td-button[raised].negative.primary,.light td-button[text].negative.primary{--mdc-theme-primary: var(--mdc-theme-error);--mdc-button-outline-color: var(--mdc-theme-error)}.light .mdc-button:not(:disabled){--mdc-button-outline-color: rgba(0, 0, 0, 0.54);--mdc-theme-primary: rgba(0, 0, 0, 0.87)}.light .mdc-button:not(:disabled):not(:disabled){border-color:rgba(0, 0, 0, 0.54)}.light .mdc-button:not(:disabled).accent{--mdc-theme-primary: #007373;--mdc-button-outline-color: var(--mdc-theme-primary);border-color:var(--mdc-button-outline-color)}.light .mdc-button:not(:disabled).destructive,.light .mdc-button:not(:disabled).negative{--mdc-theme-primary: #b11d00;--mdc-button-outline-color: var(--mdc-theme-primary);border-color:var(--mdc-button-outline-color)}.light .mdc-card.mdc-card--outlined{background-color:#f5f5f5}.light .mdc-data-table__sort-icon-button{color:rgba(0, 0, 0, 0.38)}.light .mdc-data-table__sort-icon-button .mdc-icon-button__ripple::before,.light .mdc-data-table__sort-icon-button .mdc-icon-button__ripple::after{background-color:rgba(0, 0, 0, 0.38);background-color:var(--mdc-ripple-color, rgba(0, 0, 0, 0.38))}.light .mdc-data-table__sort-icon-button:hover .mdc-icon-button__ripple::before,.light .mdc-data-table__sort-icon-button.mdc-ripple-surface--hover .mdc-icon-button__ripple::before{opacity:0.04;opacity:var(--mdc-ripple-hover-opacity, 0.04)}.light .mdc-data-table__sort-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__ripple::before,.light .mdc-data-table__sort-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__ripple::before{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.light .mdc-data-table__sort-icon-button:not(.mdc-ripple-upgraded) .mdc-icon-button__ripple::after{transition:opacity 150ms linear}.light .mdc-data-table__sort-icon-button:not(.mdc-ripple-upgraded):active .mdc-icon-button__ripple::after{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-press-opacity, 0.12)}.light .mdc-data-table__sort-icon-button.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.light .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button{color:rgba(0, 0, 0, 0.54)}.light .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button .mdc-icon-button__ripple::before,.light .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button .mdc-icon-button__ripple::after{background-color:rgba(0, 0, 0, 0.54);background-color:var(--mdc-ripple-color, rgba(0, 0, 0, 0.54))}.light .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button:hover .mdc-icon-button__ripple::before,.light .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button.mdc-ripple-surface--hover .mdc-icon-button__ripple::before{opacity:0.04;opacity:var(--mdc-ripple-hover-opacity, 0.04)}.light .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__ripple::before,.light .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__ripple::before{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.light .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button:not(.mdc-ripple-upgraded) .mdc-icon-button__ripple::after{transition:opacity 150ms linear}.light .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button:not(.mdc-ripple-upgraded):active .mdc-icon-button__ripple::after{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-press-opacity, 0.12)}.light .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.light .mdc-data-table__row--selected{background-color:rgba(189, 189, 189, 0.04)}.light .mdc-data-table__row:not(.mdc-data-table__row--selected):hover{background-color:rgba(189, 189, 189, 0.08)}.light .mdc-data-table__header-cell{color:rgba(0, 0, 0, 0.87)}.light .mdc-data-table__pagination-total,.light .mdc-data-table__pagination-rows-per-page-label,.light .mdc-data-table__cell{color:rgba(0, 0, 0, 0.87)}.light .mdc-data-table__pagination-rows-per-page-select:not(.mdc-select--disabled) .mdc-notched-outline__leading,.light .mdc-data-table__pagination-rows-per-page-select:not(.mdc-select--disabled) .mdc-notched-outline__notch,.light .mdc-data-table__pagination-rows-per-page-select:not(.mdc-select--disabled) .mdc-notched-outline__trailing{border-color:rgba(0, 0, 0, 0.12)}.light .mdc-data-table__cell,.light .mdc-data-table__header-cell{border-bottom-color:rgba(0,0,0,.12)}.light .mdc-data-table__pagination{border-top-color:rgba(0,0,0,.12)}.light .mdc-data-table{width:100%;border-width:0;white-space:normal}.light .mdc-data-table__header-cell{font-family:var(--mdc-typography-font-family);font-size:var(--mdc-typography-body2-font-size);font-weight:600;line-height:var(--mdc-typography-body2-line-height)}.light .mdc-data-table__sort-icon-button{font-size:1rem}.light mdc-drawer{border-color:rgba(0,0,0,.12)}.light .mdc-drawer{border-color:rgba(0, 0, 0, 0.12)}.light .mdc-drawer .mdc-drawer__title{color:rgba(0, 0, 0, 0.87)}.light .mdc-drawer .mdc-deprecated-list-group__subheader{color:rgba(0, 0, 0, 0.6)}.light .mdc-drawer .mdc-drawer__subtitle{color:rgba(0, 0, 0, 0.6)}.light .mdc-drawer .mdc-deprecated-list-item__graphic{color:rgba(0, 0, 0, 0.6)}.light .mdc-drawer .mdc-deprecated-list-divider{border-bottom-color:rgba(0, 0, 0, 0.12)}.light td-icon-button{color:rgba(0,0,0,.54)}.light .mdc-icon-button{color:rgba(0, 0, 0, 0.54)}.light .mdc-icon-button .mdc-icon-button__ripple::before,.light .mdc-icon-button .mdc-icon-button__ripple::after{background-color:rgba(0, 0, 0, 0.54);background-color:var(--mdc-ripple-color, rgba(0, 0, 0, 0.54))}.light .mdc-icon-button:hover .mdc-icon-button__ripple::before,.light .mdc-icon-button.mdc-ripple-surface--hover .mdc-icon-button__ripple::before{opacity:0.04;opacity:var(--mdc-ripple-hover-opacity, 0.04)}.light .mdc-icon-button.mdc-ripple-upgraded--background-focused .mdc-icon-button__ripple::before,.light .mdc-icon-button:not(.mdc-ripple-upgraded):focus .mdc-icon-button__ripple::before{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.light .mdc-icon-button:not(.mdc-ripple-upgraded) .mdc-icon-button__ripple::after{transition:opacity 150ms linear}.light .mdc-icon-button:not(.mdc-ripple-upgraded):active .mdc-icon-button__ripple::after{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-press-opacity, 0.12)}.light .mdc-icon-button.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.light .mdc-deprecated-list-divider{border-bottom-color:rgba(0, 0, 0, 0.12)}.light .mdc-list-divider{background-color:rgba(0, 0, 0, 0.12)}.light .mdc-menu .mdc-deprecated-list{color:rgba(0, 0, 0, 0.87)}.light .mdc-list.mdc-list-item--with-one-line{height:var(--mdc-list-single-line-height, 48px)}.light .mdc-list.mdc-list-item--with-two-lines{height:var(--mdc-list-two-line-height, 72px)}.light .mdc-list .mdc-list-item{height:var(--mdc-list-single-line-height, 48px);display:flex;align-items:center;justify-content:flex-start}.light .mdc-list.mdc-list--two-line .mdc-list-item{height:var(--mdc-list-two-line-height, 72px)}.light .mdc-list.mdc-list--two-line .mdc-list-item .mdc-list-item__primary-text{display:block;margin-bottom:-8px}.light .mdc-deprecated-list.mdc-deprecated-list--avatar-list .mdc-deprecated-list-item__graphic,.light td-list-item[graphic=avatar] td-icon[slot=graphic]{background-color:var(--mdc-theme-surface-neutral-highlight)}.light td-list-item,.light td-check-list-item,.light .mdc-list,.light .td-list-item,.light .mdc-deprecated-list,.light .mdc-deprecated-list-item__text,.light .mdc-list-item__primary-text{font-family:var(--mdc-typography-font-family);font-size:var(--mdc-typography-body1-font-size);font-weight:var(--mdc-typography-body1-font-weight);line-height:var(--mdc-typography-body1-line-height)}.light td-list-item span[slot=secondary] td-icon{font-size:1rem;margin-right:.25rem;position:relative;top:3px}.light td-list-item span[slot=secondary].status-caution{color:var(--mdc-theme-caution)}.light td-list-item span[slot=secondary].status-negative{color:var(--mdc-theme-negative)}.light td-list-item span[slot=secondary].status-positive{color:var(--mdc-theme-positive)}.light .beta-list-item{--mdc-theme-primary: #ffb74d}.light [divider]{border-bottom:1px solid;list-style:none;border-color:var(--mdc-theme-border, rgba(0, 0, 0, 0.12))}.light .mdc-radio .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:rgba(0, 0, 0, 0.54)}.light:not(.mdc-select--disabled) .mdc-floating-label--float-above{color:rgba(0, 0, 0, 0.54)}.light:not(.mdc-select--disabled):not(.mdc-select--focused):hover .mdc-floating-label--float-above{color:rgba(0, 0, 0, 0.54)}.light .mdc-select:not(.mdc-select--disabled) .mdc-select__selected-text{color:rgba(0, 0, 0, 0.87)}.light .mdc-select:not(.mdc-select--disabled) .mdc-floating-label{color:rgba(0, 0, 0, 0.54)}.light .mdc-select:not(.mdc-select--disabled) .mdc-select__anchor{background-color:#eee}.light .mdc-select:not(.mdc-select--disabled) .mdc-notched-outline__leading,.light .mdc-select:not(.mdc-select--disabled) .mdc-notched-outline__notch,.light .mdc-select:not(.mdc-select--disabled) .mdc-notched-outline__trailing{border-color:rgba(0, 0, 0, 0.12)}.light .mdc-select:not(.mdc-select--disabled):not(.mdc-select--focused) .mdc-select__anchor:hover .mdc-notched-outline .mdc-notched-outline__leading,.light .mdc-select:not(.mdc-select--disabled):not(.mdc-select--focused) .mdc-select__anchor:hover .mdc-notched-outline .mdc-notched-outline__notch,.light .mdc-select:not(.mdc-select--disabled):not(.mdc-select--focused) .mdc-select__anchor:hover .mdc-notched-outline .mdc-notched-outline__trailing{border-color:rgba(0, 0, 0, 0.54)}.light .mdc-select:not(.mdc-select--disabled) .mdc-select__dropdown-icon{fill:rgba(0, 0, 0, 0.54)}.light .mdc-select:not(.mdc-select--disabled) .mdc-line-ripple::before{border-bottom-color:rgba(0, 0, 0, 0.12)}.light .mdc-select:not(.mdc-select--disabled):hover .mdc-line-ripple::before{border-bottom-color:rgba(0, 0, 0, 0.54)}.light .mdc-select:not(.mdc-select--disabled) .mdc-line-ripple::after{border-bottom-color:#007373}.light .mdc-select--outlined:not(.mdc-select--disabled) .mdc-select__anchor{background-color:transparent}.light td-snackbar td-icon-button{color:white}.light td-switch,.light .mdc-switch{--mdc-theme-surface: #f5f5f5;--mdc-switch-selected-handle-color: var(--mdc-theme-primary);--mdc-switch-selected-hover-handle-color: var(--mdc-theme-primary);--mdc-switch-selected-focus-handle-color: var(--mdc-theme-primary);--mdc-switch-selected-pressed-handle-color: var(--mdc-theme-primary);--mdc-switch-selected-track-color: var(--mdc-theme-surface-secondary);--mdc-switch-selected-focus-track-color: var( --mdc-theme-surface-secondary-highlight );--mdc-switch-selected-hover-track-color: var( --mdc-theme-surface-secondary-highlight-hover );--mdc-switch-selected-pressed-track-color: var( --mdc-theme-surface-secondary-highlight-hover )}.light .mdc-tab:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mdc-theme-text-primary-on-background)}.light .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input{color:rgba(0, 0, 0, 0.54)}.light .mdc-text-field:not(.mdc-text-field--disabled) .mdc-floating-label{color:rgba(0, 0, 0, 0.54)}.light .mdc-text-field:not(.mdc-text-field--disabled){background-color:#eee}.light .mdc-text-field:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,.light .mdc-text-field:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,.light .mdc-text-field:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing{border-color:rgba(0, 0, 0, 0.12)}.light .mdc-text-field:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:rgba(0, 0, 0, 0.12)}.light .mdc-text-field:not(.mdc-text-field--disabled):hover .mdc-line-ripple::before{border-bottom-color:rgba(0, 0, 0, 0.54)}.light .mdc-text-field:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:#007373}.light .mdc-text-field:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,.light .mdc-text-field:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,.light .mdc-text-field:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing{border-color:#007373}.light .mdc-text-field:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__leading,.light .mdc-text-field:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__notch,.light .mdc-text-field:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__trailing{border-color:rgba(0, 0, 0, 0.54)}.light .mdc-text-field:not(.mdc-text-field--disabled)+.mdc-text-field-helper-line .mdc-text-field-helper-text{color:rgba(0, 0, 0, 0.54)}.light .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__icon--leading{color:rgba(0, 0, 0, 0.54)}.light .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__icon--trailing{color:rgba(0, 0, 0, 0.54)}.light .mdc-text-field--outlined:not(.mdc-text-field--disabled){background-color:transparent}.light td-top-app-bar,.light td-top-app-bar-fixed,.light .mdc-top-app-bar,.light .mdc-top-app-bar-fixed{--mdc-theme-primary: white;--mdc-theme-on-primary: rgba(0, 0, 0, 0.87);background-color:white;color:rgba(0, 0, 0, 0.87)}.light td-top-app-bar td-button,.light td-top-app-bar-fixed td-button,.light .mdc-top-app-bar td-button,.light .mdc-top-app-bar-fixed td-button{--mdc-theme-primary: #007373;--mdc-theme-on-primary: white}.light td-top-app-bar .mdc-top-app-bar__action-item,.light td-top-app-bar .mdc-top-app-bar__navigation-icon,.light td-top-app-bar-fixed .mdc-top-app-bar__action-item,.light td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon,.light .mdc-top-app-bar .mdc-top-app-bar__action-item,.light .mdc-top-app-bar .mdc-top-app-bar__navigation-icon,.light .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item,.light .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon{color:rgba(0, 0, 0, 0.54)}.light td-top-app-bar .mdc-top-app-bar__action-item::before,.light td-top-app-bar .mdc-top-app-bar__action-item::after,.light td-top-app-bar .mdc-top-app-bar__navigation-icon::before,.light td-top-app-bar .mdc-top-app-bar__navigation-icon::after,.light td-top-app-bar-fixed .mdc-top-app-bar__action-item::before,.light td-top-app-bar-fixed .mdc-top-app-bar__action-item::after,.light td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon::before,.light td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon::after,.light .mdc-top-app-bar .mdc-top-app-bar__action-item::before,.light .mdc-top-app-bar .mdc-top-app-bar__action-item::after,.light .mdc-top-app-bar .mdc-top-app-bar__navigation-icon::before,.light .mdc-top-app-bar .mdc-top-app-bar__navigation-icon::after,.light .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item::before,.light .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item::after,.light .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon::before,.light .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon::after{background-color:rgba(0, 0, 0, 0.54);background-color:var(--mdc-ripple-color, rgba(0, 0, 0, 0.54))}.light td-top-app-bar .mdc-top-app-bar__action-item:hover::before,.light td-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-surface--hover::before,.light td-top-app-bar .mdc-top-app-bar__navigation-icon:hover::before,.light td-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-surface--hover::before,.light td-top-app-bar-fixed .mdc-top-app-bar__action-item:hover::before,.light td-top-app-bar-fixed .mdc-top-app-bar__action-item.mdc-ripple-surface--hover::before,.light td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:hover::before,.light td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon.mdc-ripple-surface--hover::before,.light .mdc-top-app-bar .mdc-top-app-bar__action-item:hover::before,.light .mdc-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-surface--hover::before,.light .mdc-top-app-bar .mdc-top-app-bar__navigation-icon:hover::before,.light .mdc-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-surface--hover::before,.light .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item:hover::before,.light .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item.mdc-ripple-surface--hover::before,.light .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:hover::before,.light .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon.mdc-ripple-surface--hover::before{opacity:0.04;opacity:var(--mdc-ripple-hover-opacity, 0.04)}.light td-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-upgraded--background-focused::before,.light td-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):focus::before,.light td-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded--background-focused::before,.light td-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):focus::before,.light td-top-app-bar-fixed .mdc-top-app-bar__action-item.mdc-ripple-upgraded--background-focused::before,.light td-top-app-bar-fixed .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):focus::before,.light td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded--background-focused::before,.light td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):focus::before,.light .mdc-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-upgraded--background-focused::before,.light .mdc-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):focus::before,.light .mdc-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded--background-focused::before,.light .mdc-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):focus::before,.light .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item.mdc-ripple-upgraded--background-focused::before,.light .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):focus::before,.light .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded--background-focused::before,.light .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.light td-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded)::after,.light td-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded)::after,.light td-top-app-bar-fixed .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded)::after,.light td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded)::after,.light .mdc-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded)::after,.light .mdc-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded)::after,.light .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded)::after,.light .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.light td-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):active::after,.light td-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):active::after,.light td-top-app-bar-fixed .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):active::after,.light td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):active::after,.light .mdc-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):active::after,.light .mdc-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):active::after,.light .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):active::after,.light .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-press-opacity, 0.12)}.light td-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-upgraded,.light td-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded,.light td-top-app-bar-fixed .mdc-top-app-bar__action-item.mdc-ripple-upgraded,.light td-top-app-bar-fixed .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded,.light .mdc-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-upgraded,.light .mdc-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded,.light .mdc-top-app-bar-fixed .mdc-top-app-bar__action-item.mdc-ripple-upgraded,.light .mdc-top-app-bar-fixed .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.light a[href]{color:var(--mdc-theme-secondary);text-decoration:underline}.light a[href]:hover{text-decoration:none}
/*# sourceURL=webpack://./libs/components/src/icon/_icon.scss */
/*# sourceURL=webpack://./libs/components/src/skeleton/_skeleton.styles.scss */
/*# sourceURL=webpack://./libs/components/theme/_mixins.scss */
/*# sourceURL=webpack://./libs/components/src/button/_button.theme.scss */
/*# sourceURL=webpack://./libs/components/src/checkbox/_checkbox.theme.scss */
/*# sourceURL=webpack://./node_modules/@material/data-table/_data-table-theme.scss */
/*# sourceURL=webpack://./libs/components/src/data-table/_data-table.theme.scss */
/*# sourceURL=webpack://./libs/components/src/dialog/_dialog.theme.scss */
/*# sourceURL=webpack://./libs/components/src/linear-progress/_linear-progress.theme.scss */
/*# sourceURL=webpack://./libs/components/src/list/_list.theme.scss */
/*# sourceURL=webpack://./libs/components/src/radio/_radio.theme.scss */
/*# sourceURL=webpack://./libs/components/src/select/_select.theme.scss */
/*# sourceURL=webpack://./libs/components/src/snackbar/_snackbar.theme.scss */
/*# sourceURL=webpack://./libs/components/src/tab/_tab.theme.scss */
/*# sourceURL=webpack://./libs/components/src/textfield/_textfield.theme.scss */
/*# sourceURL=webpack://./node_modules/@material/button/_button-outlined-theme.scss */
/*# sourceURL=webpack://./node_modules/@material/theme/_css.scss */
/*# sourceURL=webpack://./libs/components/src/card/_card.theme.scss */
/*# sourceURL=webpack://./node_modules/@material/ripple/_ripple-theme.scss */
/*# sourceURL=webpack://./node_modules/@material/notched-outline/_mixins.scss */
/*# sourceURL=webpack://./libs/components/src/drawer/_drawer.theme.scss */
/*# sourceURL=webpack://./node_modules/@material/drawer/_mixins.scss */
/*# sourceURL=webpack://./node_modules/@material/list/_mixins.scss */
/*# sourceURL=webpack://./libs/components/src/icon-button/_icon-button.theme.scss */
/*# sourceURL=webpack://./node_modules/@material/list/_evolution-mixins.scss */
/*# sourceURL=webpack://./node_modules/@material/radio/_radio-theme.scss */
/*# sourceURL=webpack://./node_modules/@material/select/_select-theme.scss */
/*# sourceURL=webpack://./node_modules/@material/line-ripple/_mixins.scss */
/*# sourceURL=webpack://./libs/components/src/switch/_switch.theme.scss */
/*# sourceURL=webpack://./node_modules/@material/textfield/_mixins.scss */
/*# sourceURL=webpack://./node_modules/@material/textfield/helper-text/_mixins.scss */
/*# sourceURL=webpack://./node_modules/@material/textfield/icon/_mixins.scss */
/*# sourceURL=webpack://./libs/components/src/top-app-bar/_top-app-bar.theme.scss */
/*# sourceURL=webpack://./node_modules/@material/top-app-bar/_mixins.scss */
/*# sourceURL=webpack://./libs/components/theme/theme.scss */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */